---
name: Build Assets
on:
  release:
    types: [created]

env:
  RUSTFLAGS: "-Dwarnings"
  CARGO_TERM_COLOR: always

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - uses: cardinalby/git-get-release-action@v1
        id: get-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commitSha: ${{ github.sha }}
          prerelease: false

      - name: Install webkit2gtk (ubuntu only)

        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup node and Cache .pnpm-store
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: "pnpm"

      - name: Rust setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Set up cargo cache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install cargo-edit
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-edit
          version: latest
          use-tool-cache: true

      - name: Adjust Version
        working-directory: src-tauri
        run: |
          cargo set-version "$(echo ${{ github.ref_name }} | sed s/v// )"

      - name: Install dependencies
        run: pnpm install

      - name: Build üîß
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          releaseId: ${{ steps.get-release.outputs.id }}
          tauriScript: "pnpm"
